#! /bin/bash
set -x
set -e
set -u

# Figure out if we have wget or curl
if which wget >/dev/null; then
  http_get="wget --output-document=- --quiet"
elif which curl >/dev/null; then
  http_get="curl -o -"
else
  echo "Error: could not find wget or curl on the remote system."
  echo "To install Puppet Enterprise using HTTP, wget or curl are required"
  exit 1
fi

install_dir="puppet-enterprise"
if [[ ! -e "${install_dir}" ]]; then
  mkdir "${install_dir}"
fi


echo "Installation script has started..."
echo "Downloading from: <%= options['installer_payload'] %>"


# We assume the payload is a tar.gz file because the option handler
# enforces this.
# To save disk space (I'm concerned about /tmp filling) decompress on the fly.
echo "Uncompressing the payload ..."
$http_get '<%= options['installer_payload'] %>' | \
  tar -xvzf - --strip-components 1 -C "${install_dir}"
# REVISIT (This assumes GNU tar with the --strip-components option)
echo "Uncompressing the payload ... Done."

echo 'Downloading answers file'
$http_get '<%= options['answers_payload'] %>' > puppet.answers.orig

# Give me everything _except_ any agent certname specified in the answers file
grep -v '^q_puppetmaster_certname' puppet.answers.orig > puppet.answers
# Append the user specified option from the command line arguments.
echo 'q_puppetmaster_certname=<%= options['certname'] %>' >> puppet.answers

# Install Puppet Enterprise
"${install_dir}"/puppet-enterprise-installer -a puppet.answers 2>&1 | tee install.log

# enable auto-signing
echo '*' > /etc/puppetlabs/puppet/autosign.conf

#
# This is being removed so that all nodes do not have to be
# puppet enterprise nodes
#
rm /etc/cron.d/default-add-all-nodes

# this is configuring storeconfigs for the master
awk '{ if ( $0 ~ /\[master\]/ ) {
          printf("%s\n%s\n", $0,  "    storeconfigs = true");
     } else {
          print $0;
     }
}' /etc/puppetlabs/puppet/puppet.conf > /etc/puppetlabs/puppet/puppet.conf.storeconfig
mv /etc/puppetlabs/puppet/puppet.conf.storeconfig /etc/puppetlabs/puppet/puppet.conf

# install git and rubygems
apt-get install -y git-core
apt-get install -y rubygems

# clone git repos
<% (options['git_repos'] || {}).each do |source, target| %>
git clone <%= source %> <%= target %>
<% end %>

# switch into specified branches
<% (options['git_checkout'] || {}).each do |dir, branch| %>
pushd <%= dir %>
git checkout <%= branch %>
popd
<% end %>

# cp files from modules to system locations
<% (options['cp_files'] || {}).each do |source, target| %>
cp <%= source %> <%= target %>
<% end %>

# if a manifest was specified apply it
<% if options['manifest'] %>
mkdir -p /var/lib/puppet_client
# <%= options.inspect %>
puppet apply --vardir /var/lib/puppet_client --trace --verbose <%= options['manifest'] %> --certname=<%= options['certname'] %> | tee /tmp/puppet_output.log
return=$?
<% end %>
